% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_nb_counts.R
\name{calc_nb_counts}
\alias{calc_nb_counts}
\title{Calculate predicted value and standard error of a negative binomial regression model for each
row in a design matrix.}
\usage{
calc_nb_counts(nbObj, designMatrix, predVar = NULL, intVar = NULL)
}
\arguments{
\item{nbObj}{Model fit of class glm.nb, or mice::mira object fit using glm.nb.}

\item{designMatrix}{Matrix of covariate values. Number of columns = number of coefficients in
nbObj.}

\item{predVar}{Character string; name of main predictor variable. Defaults to NULL, in which case
predictor variable values will not be included in resulting data.frame.}

\item{intVar}{Character string (optional); name of interacting variable. Defaults to NULL. If
included, nothing changes except this column in designMatrix will also be included in the
returned data.frame.}
}
\value{
data.frame containing columns for main predictor variable; interacting variable (if
given); linear predictor and its SE; adjusted count and its lower and upper confidence limits.
}
\description{
Calculate predicted value and standard error of a negative binomial regression model for each
row in a design matrix.
}
\examples{

## Create data frame
df <- data.frame(y = round(rexp(n = 100, rate = 0.5)),
                 v1 = sample(1:5, size = 100, replace = TRUE),
                 v2 = rnorm(n = 100))

## Fit negative binomial model
mymod <- MASS::glm.nb(y ~ v1 * v2, data = df)

## Create design matrix
mydmat <- matrix(c(rep(1, 5), 1:5, rep(median(df$v2), 5)), ncol = 3)
mydmat <- cbind(mydmat, mydmat[,2] * mydmat[,3])
colnames(mydmat) <- c('(Intercept)', 'v1', 'v2', 'v1:v2')

calc_nb_counts(mymod, designMatrix = mydmat, predVar = 'v1', intVar = 'v2')

}
\seealso{
\code{\link[MASS]{glm.nb}}; \code{\link[mice]{is.mice}}, \code{\link[mice]{pool}}.
}

